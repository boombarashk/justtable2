{"version":3,"sources":["Loader.jsx","Row.jsx","Table.jsx","Panel.jsx","utils.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","visible","hiddenClassName","className","dataRow","item","filterActive","isHead","openedMap","childrenCount","setOpenedMap","groupClassName","groupHeadClassName","children","length","nodisplayClassName","isActive","id","onClick","cloneOpenedMap","Map","set","get","name","href","email","balance","Row","data","getItems","map","Table","props","rows","Panel","setFilterActive","sortFieldName","setSortFieldName","sortDescending","setSortDescending","htmlFor","onChange","ev","target","value","parseDataJSON","parentMap","reformattedData","counter","forEach","funcTransform","opened","balanceNum","replace","parentId","push","node","dataArray","index","substr","getRootNodeIndexById","checkChildren","result","childNode","getParentNode","simpleClone","arr","obj","JSON","parse","stringify","sortByField","fieldName","desc","mult","sort","a","b","deepSort","subj","sortLevel","App","useState","loading","setLoading","hasError","setHasError","setStateData","dataOpenedMap","loadData","fetch","then","res","json","catch","err","responseData","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0bacf14.chunk.js","sourcesContent":["import './styles/loader.css';\r\n\r\nfunction Loader({ visible = false }) {\r\n    const hiddenClassName = visible ? '' : 'nodisplay'\r\n    return (<>\r\n        <div className={`overlay ${hiddenClassName}`}></div>\r\n        <div className={`lds-ring ${hiddenClassName}`}>\r\n            <div></div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default Loader;\r\n","export function emptyRow() {\r\n    return <div className=\"grid-row-empty\">No data</div>\r\n}\r\n\r\nfunction dataRow({item, filterActive, isHead = false, childrenCount = 0, openedMap, setOpenedMap}) {\r\n    const groupClassName = isHead ? 'grid-group' : '';\r\n    const groupHeadClassName = item.children.length > 0 ? 'grid-group-head' : ''// <- add cursor: pointer\r\n    const nodisplayClassName = !item.isActive && filterActive  ? 'nodisplay' : ''\r\n    return <div className={`grid-row ${groupClassName} ${groupHeadClassName} ${nodisplayClassName}`}\r\n                key={item.id}\r\n                data-id={item.id}\r\n                data-active={item.isActive}\r\n                onClick={() => {\r\n                    if (item.children.length > 0) {\r\n                        const cloneOpenedMap = new Map(openedMap)\r\n                        cloneOpenedMap.set(item.id, !cloneOpenedMap.get(item.id))\r\n                        setOpenedMap(cloneOpenedMap)\r\n                    }\r\n                }}\r\n    >\r\n        <div className=\"grid-cell\">{item.name}</div>\r\n        <div className=\"grid-cell\"><a href={`mailto:${item.email}`}>{item.email}</a>\r\n        </div>\r\n        <div className=\"grid-cell\">{item.balance}</div>\r\n    </div>\r\n}\r\n\r\nexport default function Row({ data, openedMap, setOpenedMap, filterActive }){\r\n    const getItems = (data, isHead = false) => data.map( item => {\r\n        const children = openedMap && openedMap.get(item.id)\r\n            ? getItems(item.children, false)\r\n            : null;\r\n\r\n        return <>\r\n            { dataRow({item, filterActive, isHead, openedMap, setOpenedMap}) }\r\n            { children }\r\n        </>\r\n    });\r\n    return (<>{ getItems(data, true) }</>)\r\n}\r\n","import Row, {emptyRow} from \"./Row\";\r\n\r\nfunction Table(props) {\r\n    const {data} = props\r\n    const rows = data?.length\r\n        ? <Row {...props}/>\r\n        : emptyRow()\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n            <div className=\"grid-row\">\r\n                <div className=\"grid-cell grid-cell-title\">Name</div>\r\n                <div className=\"grid-cell grid-cell-title\">Email</div>\r\n                <div className=\"grid-cell grid-cell-title\">Balance</div>\r\n            </div>\r\n\r\n            { rows }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","export default function Panel({\r\n    filterActive, setFilterActive,\r\n    sortFieldName, setSortFieldName,\r\n    sortDescending, setSortDescending}) {\r\n\r\n    return <div className=\"panel\">\r\n        <div className=\"panel-filter\">\r\n            <span id=\"filterActive\" className={\r\n                `checkbox ${filterActive ? 'checkbox--active' : ''}`\r\n            }></span>\r\n            <label htmlFor=\"filterActive\"\r\n                   onClick={() => {setFilterActive(!filterActive)}}\r\n            > choose active</label>\r\n        </div>\r\n\r\n        <div className=\"panel-sort\">\r\n            <label htmlFor=\"sortBy\">sort by</label>\r\n            <select id=\"sortBy\" onChange={(ev) => setSortFieldName(ev.target.value)}>\r\n                <option value=\"id\" className={sortFieldName === \"id\" ? \"selected\" : \"\"}>Default</option>\r\n                <option value=\"email\" className={sortFieldName === \"email\" ? \"selected\" : \"\"}>Email</option>\r\n                <option value=\"balance\" className={sortFieldName === \"balance\" ? \"selected\" : \"\"}>Balance</option>\r\n            </select>\r\n\r\n            <span className={\r\n                `checkbox ${sortDescending ? 'checkbox--active' : ''}`\r\n            }></span>\r\n            <label htmlFor=\"sortOrder\"\r\n                   onClick={() => {setSortDescending(!sortDescending)}}> descending</label>\r\n        </div>\r\n    </div>\r\n}\r\n","export function parseDataJSON(data, setOpenedMap) {\r\n    if (typeof data === 'undefined' || data.length === 0) {\r\n        return []\r\n    }\r\n    /**\r\n     * parentMap в зависимости от вложенности хранит 0.[индекс в массиве 1го уровня] либо id родителя\r\n     **/\r\n    const parentMap = new Map()\r\n    const openedMap = new Map()\r\n    const reformattedData = [];\r\n    let counter = 0;\r\n\r\n    data.forEach(item => {\r\n        const funcTransform = (item) => {\r\n            return {\r\n                children: [],\r\n                opened: false,\r\n                balanceNum: +item.balance.replace(/[\\$\\,]/g,''),\r\n                ...item\r\n            }\r\n        }\r\n\r\n        if (item.parentId === 0) {\r\n            reformattedData.push(funcTransform(item));\r\n            parentMap.set(item.id, +`0.${counter}`);\r\n            counter++\r\n        } else {\r\n            parentMap.set(item.id, item.parentId)\r\n\r\n            const node = getParentNode({dataArray: reformattedData, parentMap, parentId: item.parentId})\r\n            if (node) {\r\n                // NB no save item.parent = node <-- sort broke\r\n                node.children.push(funcTransform(item));\r\n            }\r\n        }\r\n        openedMap.set(item.id, false)\r\n    });\r\n    setOpenedMap(openedMap);\r\n    return reformattedData\r\n}\r\n\r\nfunction getRootNodeIndexById(parentMap, id) {\r\n    let index = id\r\n    do {\r\n        index = parentMap.get(index)\r\n    } while (index >= 1 || index == 0)\r\n    return index > 0 ? +(index + '').substr(2) : 0\r\n}\r\n\r\nfunction getParentNode({dataArray, parentMap, parentId}) {\r\n    let index = getRootNodeIndexById(parentMap, parentId)\r\n\r\n    const checkChildren = (node) => {\r\n        let result = node\r\n        if (node.id === parentId) return result;\r\n\r\n        node.children.forEach(childNode => {\r\n            result =  childNode.id === parentId\r\n                ? childNode\r\n                : checkChildren(childNode)\r\n        })\r\n        return result\r\n    }\r\n    return checkChildren(dataArray[index])\r\n}\r\n\r\nfunction simpleClone(arr) {\r\n    return arr.map(obj => JSON.parse(JSON.stringify(obj)))\r\n}\r\n\r\nfunction sortByField(arr, fieldName, desc = false) {\r\n    if (arr.length > 0 && fieldName in arr[0]) {\r\n        const mult = desc ? -1 : 1;\r\n        return arr.sort((a,b) => (a[fieldName] > b[fieldName]) ? 1*mult : ((b[fieldName] > a[fieldName]) ? -1*mult : 0))\r\n    } else return arr\r\n}\r\n\r\nexport function deepSort(arr, fieldName, desc = false) {\r\n    if (!arr) return arr;\r\n\r\n    const subj = simpleClone(arr)\r\n\r\n    const sortLevel = (arr) => {\r\n        arr.forEach(node => {\r\n            if (node.children.length > 0) {\r\n                node.children = sortLevel(node.children)\r\n            }\r\n        })\r\n\r\n        return sortByField(arr, fieldName, desc)\r\n    }\r\n    return sortLevel(subj)\r\n}\r\n","import './styles/app.css';\nimport React, { useState, useEffect } from 'react';\nimport Loader from \"./Loader\";\nimport Table from \"./Table\";\nimport Panel from \"./Panel\";\nimport { parseDataJSON, deepSort } from \"./utils\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [data, setStateData] = useState(null);\n  const [dataOpenedMap, setOpenedMap] = useState(new Map())\n  const [filterActive, setFilterActive] = useState(false)\n  const [sortFieldName, setSortFieldName] = useState('id')\n  const [sortDescending, setSortDescending] = useState(false)\n\n  const loadData = async () => {\n      setLoading(true)\n      const responseData = await fetch(\"./default.json\")\n          .then(res => res.json())\n          .catch(err => setHasError(err))\n\n      setStateData( hasError ? [] : parseDataJSON(responseData, setOpenedMap));\n      setLoading(false)\n  }\n\n  useEffect(() => {\n      if (data === null ) loadData();\n      return () => {};\n  })\n\n  return (<>\n          <Loader visible={ loading }/>\n          <h1>Data Table</h1>\n          <Panel filterActive={filterActive} setFilterActive={setFilterActive}\n                 sortFieldName={sortFieldName} setSortFieldName={setSortFieldName}\n                 sortDescending={sortDescending} setSortDescending={setSortDescending}\n          />\n          <Table data={ deepSort(data, sortFieldName, sortDescending) }\n                 openedMap={dataOpenedMap}\n                 setOpenedMap={setOpenedMap}\n                 filterActive={filterActive}/>\n          </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}